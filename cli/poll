#!/usr/bin/env python
"""A simple command-line interface that prints out the contents of the
/formatted-colors handler to stdout whenever there is a change.

If a command is given to this program, it will be executed with the
contents of the /formatted-colors as the arguments and nothing will be
printed to stdout. The command will only be executed if the response
from the server matches RESPONSE_REGEX.
"""

__author__ = 'Aryan Naraghi (aryan.naraghi@gmail.com)'

import logging
import re
import subprocess
import sys
import time
import urllib

URL = 'http://localhost:8080/colors'
POLL_INTERVAL_SEC = 5

HTTP_OK = 200

RESPONSE_REGEX = re.compile(r"""
    [0-9A-F]{6}:\d+:\d+
    (\s+[0-9A-F]{6}:\d+:\d+){0,9}
    """, flags=re.VERBOSE)


def main(argv):
    logging.basicConfig(level=logging.INFO)
    prev = None
    while True:
        res = urllib.urlopen(URL)

        if res.getcode() != HTTP_OK:
            logging.warn('Received HTTP status code %s.', res.getcode())
            time.sleep(POLL_INTERVAL_SEC)
            continue

        cur = res.read().strip()
        if cur != prev:
            if not RESPONSE_REGEX.match(cur):
                logging.warn('Encountered malformed response: <%s>', cur)
                time.sleep(POLL_INTERVAL_SEC)
                continue

            if len(argv) > 1:
                cmd = argv[1:] + cur.split()
                logging.info('Running <%s>...', ' '.join(cmd))
                assert RESPONSE_REGEX.match(cur)  # Just to be extra safe!
                subprocess.call(cmd)
            else:
                print cur

        time.sleep(POLL_INTERVAL_SEC)
        prev = cur


if __name__ == '__main__':
    main(sys.argv)
